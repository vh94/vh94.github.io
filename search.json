[
  {
    "objectID": "Rprogramming.html",
    "href": "Rprogramming.html",
    "title": "R Programming",
    "section": "",
    "text": "The factorial of a non-negative integer \\(n\\) , denoted by \\(n!\\), is the product of all positive integers less than or equal to \\(n\\).\n\\[n! = \\prod^{n}_{i=1}{i.}\\]\n\nrecursiveFactorial <-Vectorize( \n  function(n) {\n  ifelse(n==0,1,n*recursiveFactorial(n-1))\n  }\n)\n\npar(bg = \"#fcfcfc\")\nrecursiveFactorial(1:10) |> plot(type=\"l\",log='y')\n\n\n\n\n\n\n\nThere are \\(n!\\) different ways of arranging \\(n\\) distinct objects into a sequence\n\\[\\binom nk=\\frac{n!}{k!(n-k)!} \\quad \\textrm{for}\\quad  0 \\le k \\le n,\\]\n\nbin  <- function(n,k) {\n  recursiveFactorial(n)/(recursiveFactorial(k)*recursiveFactorial(n-k))\n}\n\nbases <- c(\"A\",\"T\",\"G\",\"C\")\nbin(length(bases),3)\n\n[1] 4\n\n\n\n\n\nA\nA\nA\nT\n\n\nT\nT\nG\nG\n\n\nG\nC\nC\nC\n\n\n\n\n\n\n\n# convert single index to i,j \nM_ind <- function(v_i) {\n  i = 9\n  i_m = ifelse(v_i%%i,v_i%%i,i)\n  return(c(i_m,ceiling(v_i/i)))\n}\n\n# create boxes\nboxes <- matrix(\n  sapply(list(1:3,4:6,7:9),rep,3,each=3),\n  9,byrow = TRUE\n)\n\n# check values\ncheck_pos <- function(X,Y,board,boxes) {\n  value <- board[X,Y]\n  box   <- boxes[X,Y] \n  if (value == 0) {\n    return(FALSE)\n  } else if (any(duplicated(board[X,],incomparables = 0))) {\n    return(FALSE); message(\"Row is blocked\")\n  } else if (any(duplicated(board[,Y],incomparables = 0))) {\n    return(FALSE); message(\"Column is blocked\")\n  } else if (any(duplicated(board[boxes==box],incomparables = 0))){\n    return(FALSE); message(\"Box is blocked\")\n  } else {\n    return(TRUE); message(\"katsching\")\n  } \n}\n\n# dept first search\nsolve_sudoku <- function(sudoku) {\n  solved = FALSE\n  empty = which(sudoku == 0)\n  N = 1\n  while (solved == FALSE) {\n    if(N == length(empty)+1){\n      solved = TRUE\n      break\n    }\n    i <- M_ind(empty[N]) # current index N = i\n    while(sudoku[empty[N]] <= 9){\n      sudoku[empty[N]] = sudoku[empty[N]] + 1\n      check = check_pos(X=i[1],Y=i[2],board=sudoku,boxes = boxes)\n      if(sudoku[empty[N]] > 9){\n        sudoku[empty[N]] <- 0\n        N = N - 1\n        break\n      }\n      if(check) {\n        N = N + 1\n        break\n      }\n   }\n  }\n  return(sudoku)\n}\n\nsudoku <- matrix(data=c(\n  6,0,0,2,1,0,0,3,0,\n  5,0,9,0,0,0,6,0,0,\n  2,0,0,9,7,0,0,0,4,\n  0,0,2,3,0,4,0,0,0,\n  0,6,0,0,5,0,0,9,0,\n  0,0,0,1,0,9,7,0,0,\n  9,0,0,0,3,8,0,0,6,\n  0,0,7,0,0,0,2,0,5,\n  0,8,0,0,4,2,0,0,9), nrow=9, ncol=9, byrow=FALSE\n)\n\nsolution <- solve_sudoku(sudoku = sudoku)\n\n# confirm \nfor (i in 1:9) {\n  print(sum(solution[boxes==i]))\n}\n\n[1] 45\n[1] 45\n[1] 45\n[1] 45\n[1] 45\n[1] 45\n[1] 45\n[1] 45\n[1] 45\n\nsum(rep(1:9,9))==sum(solution)\n\n[1] TRUE\n\nrowSums(solution)\n\n[1] 45 45 45 45 45 45 45 45 45\n\ncolSums(solution)\n\n[1] 45 45 45 45 45 45 45 45 45"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "This is a personal Website containing thoughts about biology, programming and statistics.\nThe page is realized with quarto and hosted via github."
  }
]